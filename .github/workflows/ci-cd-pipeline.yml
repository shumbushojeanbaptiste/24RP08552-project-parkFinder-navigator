name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Generate Lock Files
      run: |
        npm install
        cd backend && npm install
        cd ../microservice/park-service && npm install

    - name: Clean Install Dependencies
      run: |
        npm ci
        cd backend && npm ci
        cd ../microservice/park-service && npm ci

    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and Push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/parkfinder-backend:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/parkfinder-backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/parkfinder-backend:buildcache,mode=max

    - name: Build and Push Park Service
      uses: docker/build-push-action@v4
      with:
        context: ./microservice/park-service
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/parkfinder-park-service:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/parkfinder-park-service:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/parkfinder-park-service:buildcache,mode=max

   
  

    # - name: Deploy to Production
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.DEPLOY_HOST }}
    #     username: ${{ secrets.DEPLOY_USERNAME }}
    #     key: ${{ secrets.DEPLOY_SSH_KEY }}
    #     script: |
    #       cd /app
    #       docker-compose pull
    #       docker-compose up -d